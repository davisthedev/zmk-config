/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4    &kp N5                                &kp N6     &kp N7    &kp N8     &kp N9   &kp N0    &kp BSLH
&kp TAB    &kp Q   &kp W   &kp E   &kp R     &kp T                                 &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LCTRL  &kp A   &kp S   &kp D   &kp F     &kp G                                 &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V     &kp B     &kp LBKT       &kp RBKT     &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                           &mo 3   &kp LGUI  &kp LALT  &lt 1 SPACE    &lt 2 SPACE  &kp ENTER  &kp RGUI  &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_right {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &trans            &trans                 &trans           &trans             &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp CARET         &kp AMPS               &kp ASTRK        &kp MINUS          &kp EQUAL  &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp TILDE  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans            &trans                 &trans           &trans             &trans     &trans
                        &trans  &trans  &trans  &trans    &kp RETURN  &kp RSHIFT        &trans                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_left {
            bindings = <
&trans  &trans     &trans            &trans          &trans                &trans                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp EXCL   &kp AT            &kp HASH        &kp PERCENT           &kp CARET                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LT                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans            &trans          &trans                &trans      &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans          &trans                &kp LSHIFT  &kp ESC    &trans  &trans  &trans  &trans
            >;
        };

        upper_right {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none  &none  &none  &none   &none   &none                     &none     &bt BT_PRV            &bt BT_NXT            &none      &none   &bt BT_CLR
&none  &none  &none  &none   &none   &none                     &none     &kp C_VOLUME_UP       &kp C_VOLUME_DOWN     &none      &trans  &trans
&none  &none  &none  &none   &none   &none                     &kp LEFT  &kp DOWN              &kp UP                &kp RIGHT  &trans  &trans
&none  &none  &none  &none   &none   &none   &none     &none   &none     &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &none      &trans  &trans
                     &trans  &trans  &trans  &trans    &trans  &trans    &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        upper_left {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10                         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &kp F11       &kp F12       &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
